// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoneBot.Data;

#nullable disable

namespace StoneBot.Data.Migrations
{
    [DbContext(typeof(StoneBotDbContext))]
    [Migration("20240907064945_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("StoneBot.Domain.Score", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("StoneBot.Domain.Skin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Skins");
                });

            modelBuilder.Entity("StoneBot.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StoneBot.Domain.UserSkin", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SkinId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "SkinId");

                    b.HasIndex("SkinId");

                    b.ToTable("UserSkins");
                });

            modelBuilder.Entity("StoneBot.Domain.Score", b =>
                {
                    b.HasOne("StoneBot.Domain.User", "User")
                        .WithMany("Scores")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StoneBot.Domain.Skin", b =>
                {
                    b.HasOne("StoneBot.Domain.User", null)
                        .WithMany("Skins")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StoneBot.Domain.UserSkin", b =>
                {
                    b.HasOne("StoneBot.Domain.Skin", "Skin")
                        .WithMany()
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoneBot.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StoneBot.Domain.User", b =>
                {
                    b.Navigation("Scores");

                    b.Navigation("Skins");
                });
#pragma warning restore 612, 618
        }
    }
}
